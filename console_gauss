CREATE TABLE test_table (
    id SERIAL PRIMARY KEY,
    data TEXT
);

-- 生成模拟数据（包含热点数据和随机数据）
INSERT INTO test_table (data)
SELECT
    CASE
        WHEN random() < 0.1 THEN 'abc'  -- 10% 的热点数据
        WHEN random() < 0.2 THEN 'xyz'  -- 10% 的热点数据
        ELSE md5(random()::text)        -- 80% 随机数据
    END
FROM generate_series(1, 10000000);

drop table  test_table;

EXPLAIN ANALYZE
SELECT COUNT(*) FROM test_table WHERE data = 'abc';

-- 创建索引
CREATE INDEX idx_data ON test_table(data);

ANALYZE test_table;

-- max_parallel_workers_per_gather = 4;


CREATE TABLE index_test (
    id SERIAL PRIMARY KEY,
    data INTEGER
);
INSERT INTO index_test (data)
SELECT floor((random() * 1000000) % 100) AS data
FROM generate_series(1, 1000000);

drop table index_test;
-- 创建不同类型的索引
drop index  hash_idx;

CREATE INDEX btree_idx ON index_test USING btree (data);
CREATE INDEX hash_idx ON index_test USING hash (data);

-- 执行查询并记录性能
EXPLAIN ANALYZE
SELECT * FROM index_test WHERE data = 30;

SELECT COUNT(*) FROM index_test WHERE data = 30;


CREATE TABLE txn_test (
    id SERIAL PRIMARY KEY,
    data TEXT
);


BEGIN;
INSERT INTO txn_test (data) VALUES ('test data');
UPDATE txn_test SET data = 'updated data' WHERE id = 1;
DELETE FROM txn_test WHERE id = 2;
COMMIT;



 create table emp(
     id integer primary key ,
     name varchar(30),
     age integer,
     dept_code integer,
     office_loc varchar(100),
     salary integer default 0
 );
drop  table emp;
 insert into emp values (1,'张三',22,1,'宝安',6000),
                        (2,'李四',31,1,'宝安',7000),
                        (3,'王五',25,2,'福田',6000),
                        (4,'赵六',24,1,'宝安',5000),
                        (5,'庄七',22,3,'光明',8000),
                        (6,'康八',45,2,'福田',15000),
                        (7,'聂九',34,3,'光明',7500),
                        (8,'刘二麻子',56,4,'光明',17000),
                        (9,'孙小毛',17,1,'宝安',3000),
                        (10,'陈老大',37,1,'宝安',7000);

BEGIN;
 DELETE from emp where age <17;
 UPDATE emp SET salary=salary+1000 where id=5;
 select * from emp;
 COMMIT ;
 select * from emp;
 BEGIN;
 DELETE from emp where name = '张三';
 UPDATE emp SET salary=salary-1000 where id=6;
 select * from emp;
 ROLLBACK;
 select * from emp;
 BEGIN TRANSACTION ;
 UPDATE emp SET salary=salary+1000 where id=5;
 SAVEPOINT sp01;
 UPDATE emp SET salary=salary-1000 where id=6;
 select * from emp;
 ROLLBACK TO sp01;
 select * from emp;
 UPDATE emp SET salary=salary-1000 where id=7;
 select * from emp;
 COMMIT ;
 select * from emp;


select * from emp;
 BEGIN TRANSACTION ;
 TRUNCATE emp;
 COMMIT;
 select * from emp;--empty table
 ROLLBACK;
 select * from emp;--still empty

 -- check the original data in database
 select * from emp;
 BEGIN TRANSACTION ;
 UPDATE emp SET salary=salary+1000 where id=5;
 SAVEPOINT sp01;
 UPDATE emp SET salary=salary-1000 where id=6;
 select * from emp;
 ROLLBACK TO sp01;-- check the data in database, the result is corresponds to the transaction  operation
 select * from emp;

BEGIN TRANSACTION ;
 insert into emp values (44,'张三',22,2,'宝
安',6000);
--ROLLBACK;

select * from emp;

COMMIT;
select * from emp;

